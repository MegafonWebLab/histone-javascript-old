<?xml version="1.0" encoding="UTF-8"?>
<examples>

	<example name="{{for}} simple example"><![CDATA[
		{{* simple loop example *}}
		<ul>
			{{for item in [1, 2, 3, 4, 5, 6]}}
				<li>{{item}}</li>
			{{/for}}
		</ul>
	]]></example>

	<example name="{{for}} reading key and value"><![CDATA[
		{{* reading key and value in the loop *}}
		<ul>
			{{for key:value in [one: 1, two: 2, three: 3, four: 4, five: 5, six: 6]}}
				<li>{{key}} = {{value}}</li>
			{{/for}}
		</ul>
	]]></example>

	<example name="{{for}} reading iteration index"><![CDATA[
		{{* reading iteration index in the loop *}}
		<div style="border: 1px solid red;">
			{{for item in [1, 2, 3, 4, 5, 6]}}
				{{if self.index is 0}}
					<strong>first item:</strong>
				{{elseif self.index is self.last}}
					<strong>last item:</strong>
				{{/if}}
				{{if self.index mod 2}}
					<div style="padding: 4px; border: 2px solid blue; margin: 1px;">
						{{item}}
					</div>
				{{else}}
					<div style="padding: 4px; border: 2px solid green; margin: 1px;">
						{{item}}
					</div>
				{{/if}}
			{{/for}}
		</div>
	]]></example>

	<example name="{{var}} extended form definition"><![CDATA[
		{{* variable definition (extended form) *}}
		{{var myHTML}}
			<span style="border: 1px solid red;">
				<strong><i>Hello world!</i></strong>
			</span>
		{{/var}}

		<div>myHTML = {{myHTML}}</div>
	]]></example>

	<example name="{{macro}} fixed arguments list"><![CDATA[
		{{* macro with fixed arguments list *}}
		{{macro makeList(a1, a2, a3)}}
			<div>a1 = {{a1}}</div>
			<div>a2 = {{a2}}</div>
			<div>a3 = {{a3}}</div>
		{{/macro}}

		{{* call our macro *}}
		{{makeList('hello', 'world', 3.14)}}
	]]></example>

	<example name="{{macro}} variable arguments list"><![CDATA[
		{{* macro with variable arguments list *}}
		{{macro makeList()}}
			<ul>
				{{for arg in self.arguments}}
					<li>{{arg}}</li>
				{{/for}}
			</ul>
		{{/macro}}

		{{* call our macro *}}
		{{makeList('Apple', 'Google', 'Microsoft', 'Facebook')}}
	]]></example>

	<example name="{{macro}} recursive calls"><![CDATA[
		{{* recursive macros example *}}
		{{macro myMacro(string, offset)}}
			{{var offset = offset.isNumber() ? offset : 0}}
			<div>{{string.slice(offset)}}</div>
			{{if offset < string.size() - 1}}
				{{myMacro(string, offset + 1)}}
			{{/if}}
		{{/macro}}

		{{myMacro('Hello world!')}}
	]]></example>

	<example name="{{call}} for calling macros"><![CDATA[
		{{* macro with variable arguments list *}}
		{{macro makeBorderAround(html)}}
			<div style="border: 4px solid gray;">
				{{html}}
			</div>
		{{/macro}}

		{{* call our macro*}}
		{{makeBorderAround('<ul><li>this</li><li>is not</li><li>very convenient</li>')}}

		<br />

		{{* call our macro using {{call}} statement *}}
		{{call makeBorderAround}}
			<ul>
				<li>this</li>
				<li>is way</li>
				<li>better</li>
			</ul>
		{{/call}}
	]]></example>

	<example name="{{import}} for importing macros"><![CDATA[
		{{* import macro "hello" from external template *}}
		{{import 'examples/include.tpl'}}
		{{hello('Histone')}}
	]]></example>

	<example name="number.toChar()"><![CDATA[
		{{* using toChar() function to convert character code into a character *}}
		{{var codes = [
			72, 101, 108,
			108, 111, 32,
			119, 111, 114,
			108, 100, 33
		]}}

		{{for code in codes}}{{
			code.toChar()
		}}{{/for}}
	]]></example>

	<example name="string.strip()"><![CDATA[
		{{* using string.strip to remove unwanted characters
			at the beginning and the end of a string *}}
		{{var myString = "   [   one two three   ]   "}}
		<div>myString = {{myString.toJSON()}}</div>
		<div>myString = {{myString.strip(' ', '[', ']').toJSON()}}</div>
	]]></example>

	<example name="string.split()"><![CDATA[
		{{* using string.split to turn string into an array *}}
		{{var myString = "Hello world"}}
		{{for char in myString.split('')}}
			<div>character at index({{self.index}}) = {{char.toJSON()}}</div>
		{{/for}}
	]]></example>

	<example name="string.test()"><![CDATA[
		{{* testing strings against the regular expression *}}
		{{var emailRegExp = '^([\w-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$'}}

		{{for emailAddress in [
			'foobar',
			'dsfsdafd@',
			'@xxxxxx',
			'sadfdsf@cccc',
			'@xxxxxx.com',
			'weblab@megafon.ru'
		]}}
			<div>
				{{if emailAddress.test(emailRegExp)}}
					"<strong style="color: green;">{{emailAddress}}</strong>"
					<span>is valid email address</span>
				{{else}}
					"<strong style="color: red;">{{emailAddress}}</strong>"
					<span>is invalid email address</span>
				{{/if}}
			</div>
		{{/for}}
	]]></example>

	<example name="string.toNumber()"><![CDATA[
		{{* using string.toNumber() to turn string into a number *}}
		{{var myString}}
			3.14
		{{/var}}

		<div>{{myString}} * 100 = {{myString.toNumber() * 100}}</div>
	]]></example>

	<example name="map.join()"><![CDATA[
		{{* using map.join to turn map into a string *}}
		{{var style = [
			'color: blue',
			'padding: 8px',
			'font-weight: bold',
			'border-radius: 8px',
			'border: 1px solid red'
		].join(';')}}

		<div style="{{style}}">
			hello world
		</div>
	]]></example>

	<example name="map.remove()"><![CDATA[
		{{* using map.remove to remove array items *}}
		{{macro reduce(array)}}
			{{var key = array.keys()[0]}}
			{{if key}}
				{{var values = array.values()}}
				<div>{{values.toJSON()}}</div>
				{{reduce(array.remove(key))}}
			{{/if}}
		{{/macro}}

		{{reduce([
			"different",
			"something",
			"caterpillar",
			"everything",
			"chocolate",
			"hamburger",
			"downstairs"
		])}}
	]]></example>

	<example name="global.dayOfWeek()"><![CDATA[
		{{* define week day names *}}
		{{var days = [
			'Monday',
			'Tuesday',
			'Wednesday',
			'Thursday',
			'Friday',
			'Saturday',
			'Sunday'
		]}}

		{{* 11 July 2012: Wednesday *}}
		<div>11.07.2012 is {{days[dayOfWeek(2012, 7, 11) - 1]}}</div>

		{{* 22 November 1963: Friday *}}
		<div>22.11.1963 is {{days[dayOfWeek(1963, 11, 22) - 1]}}</div>

		{{* 25 July 1985: Thursday *}}
		<div>25.07.1985 is {{days[dayOfWeek(1985, 7, 25) - 1]}}</div>
	]]></example>

	<example name="global.daysInMonth()"><![CDATA[
		{{* define month names *}}
		{{var months = [
			'January', 'February', 'March',
			'April', 'May', 'June', 'July', 'August',
			'September', 'October', 'November', 'December'
		]}}

		{{* result: 31 *}}
		<div>There are {{daysInMonth(2012, 12)}} days in {{months[11]}} 2012</div>

		{{* result: 29 *}}
		<div>There are {{daysInMonth(2012, 2)}} days in {{months[1]}} 2012</div>
	]]></example>

	<example name="global.range()"><![CDATA[
		<div>
			{{* creating a array with 30 elements in it *}}
			{{for item in range(1, 30)}}
				<div style="{{[
					'float: left',
					'background-color: gray',
					'width: 40px',
					'height: 40px',
					'margin-right: 5px',
					'margin-bottom: 5px'
				].join(';')}}">
					{{item}}
				</div>
			{{/for}}
		</div>
	]]></example>

	<example name="global.uniqueId()"><![CDATA[
		{{* generate 10 unique identifiers *}}
		{{for index in range(1, 30)}}
			<div>{{index}}. uniquId is {{uniqueId()}}</div>
		{{/for}}
	]]></example>

	<example name="global.loadText()"><![CDATA[
		{{* load text file using loadText function *}}
		{{var url = resolveURI('examples/text.txt', this.href)}}

		Text from: <a target="_blank" href="{{url}}">{{url}}</a>
		<div style="padding-left: 20px; padding-top: 10px;">{{loadText(url)}}</div>
	]]></example>

	<example name="global.loadJSON()"><![CDATA[
		{{* load JSON object from file using loadJSON function *}}
		{{var url = resolveURI('examples/json.json', this.href)}}
		{{var data = loadJSON(url)}}

		{{macro dumpJSON(tree, level)}}
			{{var level = level or 0}}
			{{for key:value in tree}}
				<div style="padding-left: {{level * 20}}px;">
					{{if value.isMap()}}
						{{key}}: {
							{{dumpJSON(value, level + 1)}}
						}
					{{else}}
						{{key}}: {{value.toJSON()}}
					{{/if}}
				</div>
			{{/for}}
		{{/macro}}

		JSON object from: <a target="_blank" href="{{url}}">
			{{url}}
		</a>
		<div style="padding-left: 20px; padding-top: 10px;">
			{{dumpJSON(data)}}
		</div>
	]]></example>

	<example name="global.loadJSON() for Twitter API"><![CDATA[
		{{var url = [
			'https://api.twitter.com/1/',
			'statuses/user_timeline.json?',
			'include_rts=true&',
			'screen_name=_ruslan&',
			'count=30'
		].join('')}}

		{{var timeLine = loadJSON(url, true)}}

		{{for entry in timeLine}}
			<div style="margin: 1px; border: 1px solid red; padding: 5px;">
				{{entry.text}}
			</div>
		{{/for}}
	]]></example>

	<example name="global.loadJSON() for GitHub API"><![CDATA[
		{{var url = 'https://api.github.com/users/angrycoding/repos'}}
		{{var repositories = loadJSON(url, true)}}

		{{for repo in repositories}}
			<div style="margin: 1px; border: 1px solid red; padding: 5px;">
				<a href="#{{repo.name}}">{{repo.name}}</a>
				<div>{{repo.description}}</div>
			</div>
		{{/for}}
	]]></example>

	<example name="global.include()"><![CDATA[
		{{* process template from examples/include.tpl file *}}
		{{var url = 'examples/include.tpl'}}
		{{var url = resolveURI(url, this.href)}}

		{{include(url, [
			color: 'white',
			borderColor: 'red',
			borderRadius: 10,
			backgroundColor: 'gray',
			href: url
		])}}
	]]></example>

	<example name="built-in properties"><![CDATA[
		{{* accessing built-in properties *}}
		<div>baseURI = "{{baseURI}}"</div>
		<div>clientType = "{{clientType}}"</div>
		<div>userAgent = "{{userAgent}}"</div>
	]]></example>

</examples>