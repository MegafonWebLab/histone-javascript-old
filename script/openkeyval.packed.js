/**
 *  JavaScript wrapper for http://openkeyval.org
 *  (C) 2010 by Mark Christian & Brian Klug
 *  https://github.com/shinyplasticbag/openkeyval
 *
 *  Licensed under Creative Commons Attribution-ShareAlike 3.0
 *  http://creativecommons.org/licenses/by-sa/3.0/
 */var OpenKeyval={api:{getItem:function(a,b){var c=encodeURIComponent(a)+".jsonp?callback=OpenKeyval.callbacks."+OpenKeyval.makeCallback(b,a);OpenKeyval.api.makeJSONPRequest(c)},makeJSONPRequest:function(a){a[0]==="/"&&(a=a.substring(1));var b=document.createElement("script");b.src=OpenKeyval.server+a,document.body.appendChild(b)},setItem:function(a,b,c){var d="/store/?"+encodeURIComponent(a)+"="+encodeURIComponent(b)+"&jsonp_callback=OpenKeyval.callbacks."+OpenKeyval.makeCallback(c,a);OpenKeyval.api.makeJSONPRequest(d)}},callbacks:{},console:{},memoizedData:{},shouldMemoize:!0,server:"http://api.openkeyval.org/",setDebugMode:function(a){a?OpenKeyval.console=console:OpenKeyval.console.log=function(){}},setServer:function(a){if(a===OpenKeyval.server)return;a.substring(a.length-1)!=="/"&&(a+="/"),OpenKeyval.server=a,OpenKeyval.memoizedData={}},setShouldMemoize:function(a){if(OpenKeyval.shouldMemoize==a)return;OpenKeyval.console.log("setShouldMemoize",a),OpenKeyval.shouldMemoize=!!a,OpenKeyval.memoizedData={}},deleteItem:function(a,b){OpenKeyval.setItem(a,null,b)},getItem:function(a,b){if(OpenKeyval.shouldMemoize&&OpenKeyval.memoizedData[a]){OpenKeyval.console.log("Returning memoized value for ",a),b(OpenKeyval.memoizedData[a],a);return}OpenKeyval.console.log("Starting remote getItem",a),OpenKeyval.api.getItem(a,function(c){OpenKeyval.console.log("Received value for",a),OpenKeyval.shouldMemoize&&c&&(OpenKeyval.console.log("Memoizing",a),OpenKeyval.memoizedData[a]=c),b(c,a)})},makeCallback:function(a,b){var c;do c="okvcb"+parseInt(Math.random()*1e7);while(typeof OpenKeyval.callbacks[c]!="undefined");return OpenKeyval.callbacks[c]=function(a,b,c){return function(c){delete OpenKeyval.callbacks[a],b(c)}}(c,a),c},setItem:function(a,b,c){c=c||function(){},OpenKeyval.shouldMemoize&&delete OpenKeyval.memoizedData[a];var d=function(d){OpenKeyval.console.log("Received setItem response",a),d&&d.status=="multiset"&&OpenKeyval.shouldMemoize&&(OpenKeyval.console.log("Memoizing setItem response",a),OpenKeyval.memoizedData[a]=b),c(d)};OpenKeyval.console.log("Starting remote setItem",a),OpenKeyval.api.setItem(a,b,d)}};OpenKeyval.setDebugMode(!1),window.remoteStorage=remoteStorage=OpenKeyval;